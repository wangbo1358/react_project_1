{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zhuxing/Documents/react_project2/react_project_1/src/FrontendAuth.js\";\nimport React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nclass FrontendAuth extends Component {\n  render() {\n    const {\n      routerConfig,\n      location\n    } = this.props;\n    const {\n      pathname\n    } = location; //获取cookie字符串\n\n    var strCookie = document.cookie; //将多cookie切割为多个名/值对\n\n    var arrCookie = strCookie.split(\"; \");\n    var userId; //遍历cookie数组，处理每个cookie对\n\n    for (var i = 0; i < arrCookie.length; i++) {\n      var arr = arrCookie[i].split(\"=\"); //找到名称为userId的cookie，并返回它的值\n\n      if (\"uyun_access_token_uyun-prod\" == arr[0]) {\n        userId = arr[1];\n        break;\n      }\n    }\n\n    const isLogin = userId; // alert(userId);\n    // const isLogin = document.cookie;\n    // 如果该路由不用进行权限校验，登录状态下登陆页除外\n    // 因为登陆后，无法跳转到登陆页\n    // 这部分代码，是为了在非登陆状态下，访问不需要权限校验的路由\n\n    const targetRouterConfig = routerConfig.find(item => {\n      return item.path.replace(/\\s*/g, \"\") === \"/\" + pathname.split('/')[1];\n      console.log(item.path);\n    });\n\n    if (targetRouterConfig && !targetRouterConfig.auth && !isLogin) {\n      const {\n        component\n      } = targetRouterConfig;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: pathname,\n        component: component\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (isLogin) {\n      // 如果是登陆状态，想要跳转到登陆，重定向到主页\n      if (pathname === \"/homelogin\") {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 24\n        }, this);\n      } else {\n        // 如果路由合法，就跳转到相应的路由\n        if (targetRouterConfig) {\n          return /*#__PURE__*/_jsxDEV(Route, {\n            path: pathname,\n            component: targetRouterConfig.component\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this);\n        } else {\n          // 如果路由不合法，重定向到 404 页面\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/404\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 28\n          }, this);\n        }\n      }\n    } else {\n      // 非登陆状态下，当路由合法时且需要权限校验时，跳转到登陆页面，要求登陆\n      if (targetRouterConfig && targetRouterConfig.auth) {\n        console.log('跳转登录登录');\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/homelogin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 24\n        }, this);\n      } else {\n        // 非登陆状态下，路由不合法时，重定向至 404\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/404\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 24\n        }, this);\n      }\n    }\n  }\n\n}\n\nexport default FrontendAuth;","map":{"version":3,"sources":["/Users/zhuxing/Documents/react_project2/react_project_1/src/FrontendAuth.js"],"names":["React","Component","Route","Redirect","FrontendAuth","render","routerConfig","location","props","pathname","strCookie","document","cookie","arrCookie","split","userId","i","length","arr","isLogin","targetRouterConfig","find","item","path","replace","console","log","auth","component"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AACA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACjCI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,QAA6B,KAAKC,KAAxC;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAeF,QAArB,CAFK,CAIL;;AACA,QAAIG,SAAS,GAAGC,QAAQ,CAACC,MAAzB,CALK,CAML;;AACA,QAAIC,SAAS,GAAGH,SAAS,CAACI,KAAV,CAAgB,IAAhB,CAAhB;AACA,QAAIC,MAAJ,CARK,CASL;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAAS,CAACI,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,UAAIE,GAAG,GAAGL,SAAS,CAACG,CAAD,CAAT,CAAaF,KAAb,CAAmB,GAAnB,CAAV,CADuC,CAEvC;;AACA,UAAI,iCAAiCI,GAAG,CAAC,CAAD,CAAxC,EAA6C;AACzCH,QAAAA,MAAM,GAAGG,GAAG,CAAC,CAAD,CAAZ;AACA;AACH;AACJ;;AACD,UAAMC,OAAO,GAAEJ,MAAf,CAlBK,CAmBL;AACA;AACA;AACA;AACA;;AACA,UAAMK,kBAAkB,GAAGd,YAAY,CAACe,IAAb,CACtBC,IAAD,IAAU;AACN,aAAOA,IAAI,CAACC,IAAL,CAAUC,OAAV,CAAkB,MAAlB,EAA0B,EAA1B,MAAkC,MAAMf,QAAQ,CAACK,KAAT,CAAe,GAAf,EAAoB,CAApB,CAA/C;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACC,IAAjB;AACH,KAJsB,CAA3B;;AAMA,QAAIH,kBAAkB,IAAI,CAACA,kBAAkB,CAACO,IAA1C,IAAkD,CAACR,OAAvD,EAAgE;AAC5D,YAAM;AAAES,QAAAA;AAAF,UAAgBR,kBAAtB;AACA,0BAAO,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAEX,QAAnB;AAA6B,QAAA,SAAS,EAAEmB;AAAxC;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,QAAIT,OAAJ,EAAa;AACT;AACA,UAAIV,QAAQ,KAAK,YAAjB,EAA+B;AAC3B,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAEO;AACH;AACA,YAAIW,kBAAJ,EAAwB;AACpB,8BAAQ,QAAC,KAAD;AAAO,YAAA,IAAI,EAAEX,QAAb;AAAuB,YAAA,SAAS,EAAEW,kBAAkB,CAACQ;AAArD;AAAA;AAAA;AAAA;AAAA,kBAAR;AACH,SAFD,MAEO;AACH;AACA,8BAAO,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH;AACJ;AACJ,KAbD,MAaO;AACH;AACA,UAAIR,kBAAkB,IAAIA,kBAAkB,CAACO,IAA7C,EAAmD;AAC/CF,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAHD,MAGO;AACH;AACA,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;AACJ;AACJ;;AA1DgC;;AA4DrC,eAAetB,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nclass FrontendAuth extends Component {\n    render() {\n        const { routerConfig, location } = this.props;\n        const { pathname } = location;\n\n        //获取cookie字符串\n        var strCookie = document.cookie;\n        //将多cookie切割为多个名/值对\n        var arrCookie = strCookie.split(\"; \");\n        var userId;\n        //遍历cookie数组，处理每个cookie对\n        for (var i = 0; i < arrCookie.length; i++) {\n            var arr = arrCookie[i].split(\"=\");\n            //找到名称为userId的cookie，并返回它的值\n            if (\"uyun_access_token_uyun-prod\" == arr[0]) {\n                userId = arr[1];\n                break;\n            }\n        }\n        const isLogin =userId;\n        // alert(userId);\n        // const isLogin = document.cookie;\n        // 如果该路由不用进行权限校验，登录状态下登陆页除外\n        // 因为登陆后，无法跳转到登陆页\n        // 这部分代码，是为了在非登陆状态下，访问不需要权限校验的路由\n        const targetRouterConfig = routerConfig.find(\n            (item) => {\n                return item.path.replace(/\\s*/g, \"\") === \"/\" + pathname.split('/')[1]\n                console.log(item.path)\n            }\n        );\n        if (targetRouterConfig && !targetRouterConfig.auth && !isLogin) {\n            const { component } = targetRouterConfig;\n            return <Route exact path={pathname} component={component} />\n        }\n        if (isLogin) {\n            // 如果是登陆状态，想要跳转到登陆，重定向到主页\n            if (pathname === \"/homelogin\") {\n                return <Redirect to=\"/\" />;\n            } else {\n                // 如果路由合法，就跳转到相应的路由\n                if (targetRouterConfig) {\n                    return (<Route path={pathname} component={targetRouterConfig.component} />);\n                } else {\n                    // 如果路由不合法，重定向到 404 页面\n                    return <Redirect to=\"/404\" />;\n                }\n            }\n        } else {\n            // 非登陆状态下，当路由合法时且需要权限校验时，跳转到登陆页面，要求登陆\n            if (targetRouterConfig && targetRouterConfig.auth) {\n                console.log('跳转登录登录')\n                return <Redirect to=\"/homelogin\" />;\n            } else {\n                // 非登陆状态下，路由不合法时，重定向至 404\n                return <Redirect to=\"/404\" />;\n            }\n        }\n    }\n}\nexport default FrontendAuth"]},"metadata":{},"sourceType":"module"}